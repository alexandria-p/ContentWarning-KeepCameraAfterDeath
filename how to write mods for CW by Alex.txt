Writing ContentWarning Mods

1.
- update game on Steam to latest version
- open (local mod) working directory root in source control
- open local mod in Visual Studio (needs to be VS cause there is a csproj that we will build to export the mod as a .dll)

2.
CLEARING CACHE
- make sure you don't have another local version of your mod in 
steamapps/common/Content Warning/Plugins, or
C:\Users\Alex (Work Account)\AppData\Roaming\r2modmanPlus-local\ContentWarning\cache, or
C:\Users\Alex (Work Account)\AppData\Roaming\r2modmanPlus-local\ContentWarning\profiles\alexandria-p\BepInEx\plugins

3.
r2Modman
- update all mods
- disable cloud KeepCameraAFterDeath
- enable LOCAL keep camera after death
(if not already imported, go to Settings -> Import local mod)
W/mods/ContentWarning

4.
- open ILSpy (after making sure Content Warning is updated to latest version on Steam)/open latest files

5.
- Start Modded via r2modman



How to Change the version (of local mod) in .csproj
<PropertyGroup>
    <AssemblyName>alexandria-p.KeepCameraAfterDeath</AssemblyName>
    <Product>KeepCameraAfterDeath</Product>
    <!-- Change to whatever version you're currently on. -->
    <Version>1.2.0</Version>
</PropertyGroup>


How to Build & Test your mod:
- opened .sln in Visual Studio.
- in Solution View (solution explorer) - NOT folder view.
- Set to DEBUG, on toolbar
- pressed Build&Run
- .dll was exported, though a error message popped up (not important)
- .dll is built to local mod "<working_directory_root>/bin/Debug/netstandard2.1/<your_mod_name>.dll"
- In r2 modman, Settings -> Import Local mod -> choose this .dll file.
- (make sure you clear cache so old versions aren't hanging around).

- Make sure you export the RELEASE version to send to the thunderstore


How to publish to Thunderstore:
- replace .dll file with RELEASE build
- update manifest.json (update version, mod dependencies)
- replace README with new readme from repo
- update CHANGELOG with release notes
- export whole directory to ZIP file [alexandria-p.KeepCameraAfterDeath v1.2.0]
- login to Thunderstore, open Content Warning, click Upload at the top bar.
- choose your team (alexandria-p) and community (content warning)
- mods, tools, misc, client-only, host-only, camera mods, bepinex


PACKAGES IN VISUAL STUDIO (csproj)

How to setup bepinex as a package source:
- in VS, open Manage NuGet packages
- open the cog icon (settings)
- "NuGet Package Manager -> Package Sources"
- Add a new Package source, for nuget.org


-if you are missing a reference/a library that isnt resolving but everyone else seems to be using in their mods, it might be a dll from the ContentWarning base game.

reference it in your .csproj:
<Reference Include="Unity.Mathematics">
	<HintPath>$(GameDirectory)\Content Warning_Data\Managed\Unity.Mathematics.dll</HintPath>
</Reference>



LOGS

- BepInEx logs will popup in a console window if you start Content Warning modded via r2 modman.

Logs are stored in AppData/LocalLow/Landfall Games/Content Warning, there's logs for the two last games you've played once you close the game. 
A way of getting to the folder is by pressing your Windows key, pasting %appdata%\..\LocalLow\Landfall Games\Content Warning\ and pressing enter/ok.


Updating Thunderstore mods for 2025:
- bypass DontDestroyOnLoad that was iuntroduced by baseunityplugin bepin update
"Mods now need to create a new GameObject that isn’t destroyed on loading and attach their script to it. Before this was not necessary so most mods didn’t need to add it. Causing pretty much every mod to be broken"
Add DontDestroyOnLoad(theGameObjectYouJustMade);
and theGameObjectYouJustMade.hideFlags = HideFlags.HideAndDontSave;
so it doesn't get unloaded right away on scene change

ICON
I use Gemunu Libre for the font in my mod icons.

Writing mods for Steam
- run Computery's mod "Content Loader" first on Steam, so it can install Bepinex.
- you will know it is working if you open AppData/LocalLow/Landfall Games/Content Warning and the logs say "Mod preloader running. Currently loaded mono assemblies are:" and it includes MonoMod and BepInEx.
- you may need to remove your mod from Content Warning plugins until you complete this step first and have Bepinex safely installed.
- if you messed up, uninstall and reinstall Content Warning again (delete the directory in steamapps and then run Verify integrity of files via Steam)
- Then when bepinex is definitely installed, subscribe to any other mods you know yours will depend on
- Make a folder for your local mod in the following location:
- \steamapps\common\Content Warning\Plugins\AlwaysPlayFinalDay
- the icon should be called preview.png
- include MMHOOK_Assembly-CSharp.dll in the directory root next to your mod .dll file (if you are using MonoMod).
- upload to the Steam workshop via Content Warning (within the main menu -> Mod Loader)
- Instead of the ContentWarningPlugin/BepInPlugin running its "Awake" function, this will not happen when loading the .dll in Steam. 
- To run any init code for your mod, run it in the static instructor for the ContentWarningPlugin/BepInPlugin class.

Getting into Modding

I started with Hamunii's youtube video in this link, 

I followed details on the Lethal Company modding wiki (also in this link) I think on how to decompile the game code using ILSpy

https://discord.com/channels/1224455971057958954/1227764852613709914/1227764852613709914 

https://cwmodding.wiki/getting-started.html

I used Visual Studio as my development IDE (free tier)

And I used Xilo's Content Warning Template (uses MonoMod/C#): https://github.com/ContentWarningCommunity/Content-Warning-Mod-Templates

Feel free to checkout the .csproj file on my mod's github to see how I structured it: (handling the references in the mod's .csproj is probably what confused me the most since I didn't see that documented anywhere)

https://github.com/alexandria-p/ContentWarning-KeepCameraAfterDeath
