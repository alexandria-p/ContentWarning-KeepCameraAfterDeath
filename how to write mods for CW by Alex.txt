Writing ContentWarning Mods

- update game on Steam to latest version
- open (local mod) working directory root in source control
- open local mod in Visual Studio (needs to be VS cause there is a csproj that we will build to export the mod as a .dll)
- make sure you don't have another local version of your mod in steamapps/common/Content Warning/Plugins, as this will override your other local working directory.

r2Modman
- update all mods
- disable cloud KeepCameraAFterDeath
- enable LOCAL keep camera after death
(if not already imported, go to Settings -> Import local mod)
W/mods/ContentWarning

- open ILSpy (after making sure Content Warning is updated to latest version on Steam)/open latest files
- Start Modded via r2modman


- change my version (of local mod) in .csproj
<PropertyGroup>
    <AssemblyName>alexandria-p.KeepCameraAfterDeath</AssemblyName>
    <Product>KeepCameraAfterDeath</Product>
    <!-- Change to whatever version you're currently on. -->
    <Version>1.2.0</Version>
</PropertyGroup>


- bypass DontDestroyOnLoad that was iuntroduced by baseunityplugin bepin update
"Mods now need to create a new GameObject that isn’t destroyed on loading and attach their script to it. Before this was not necessary so most mods didn’t need to add it. Causing pretty much every mod to be broken"
Add DontDestroyOnLoad(theGameObjectYouJustMade);
and theGameObjectYouJustMade.hideFlags = HideFlags.HideAndDontSave;
so it doesn't get unloaded right away on scene change


-publishing to Thunderstore:
- replace .dll file with RELEASE build
- update manifest.json (update version, mod dependencies)
- replace README with new readme from repo
- update CHANGELOG with release notes
- export whole directory to ZIP file [alexandria-p.KeepCameraAfterDeath v1.2.0]
- login to Thunderstore, open Content Warning, click Upload at the top bar.
- choose your team (alexandria-p) and community (content warning)
- mods, tools, misc, client-only, host-only, camera mods, bepinex


Test:
opened .sln in Visual Studio.
in Solution View (solution explorer) - NOT folder view.
Set to DEBUG, on toolbar
pressed Build&Run
.dll was exported, though a error message popped up (not important)
.dll is built to local mod working directory root/bin/Debug/netstandard2.1/___.dll


Make sure you export the RELEASE version to send to the thunderstore



if you are missing a reference/a library that isnt resolving but everyone else seems to be using in their mods, it might be a dll from the ContentWarning base game.

reference it in your .csproj:
<Reference Include="Unity.Mathematics">
	<HintPath>$(GameDirectory)\Content Warning_Data\Managed\Unity.Mathematics.dll</HintPath>
</Reference>


Logs are stored in AppData/LocalLow/Landfall Games/Content Warning, there's logs for the two last games you've played once you close the game. 
A way of getting to the folder is by pressing your Windows key, pasting %appdata%\..\LocalLow\Landfall Games\Content Warning\ and pressing enter/ok.


Getting into Modding

I started with Hamunii's youtube video in this link, 

I followed details on the Lethal Company modding wiki (also in this link) I think on how to decompile the game code using ILSpy

https://discord.com/channels/1224455971057958954/1227764852613709914/1227764852613709914 

https://cwmodding.wiki/getting-started.html

I used Visual Studio as my development IDE (free tier)

And I used Xilo's Content Warning Template (uses MonoMod/C#): https://github.com/ContentWarningCommunity/Content-Warning-Mod-Templates

Feel free to checkout the .csproj file on my mod's github to see how I structured it: (handling the references in the mod's .csproj is probably what confused me the most since I didn't see that documented anywhere)

https://github.com/alexandria-p/ContentWarning-KeepCameraAfterDeath
